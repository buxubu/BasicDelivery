// <auto-generated />
using System;
using BasicDelivery.Domain.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BasicDelivery.Data.Migrations
{
    [DbContext(typeof(deliveryDbContext))]
    [Migration("20240217122628_db")]
    partial class db
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BasicDelivery.Domain.Entities.Driver", b =>
                {
                    b.Property<int>("DriverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("driverId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverId"), 1L, 1);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("address");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("avatar");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fullName");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime")
                        .HasColumnName("lastLogin");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("passwordHash");

                    b.Property<int?>("ReviewRate")
                        .HasColumnType("int")
                        .HasColumnName("reviewRate");

                    b.Property<string>("Salt")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("salt");

                    b.HasKey("DriverId");

                    b.HasIndex(new[] { "Email" }, "UQ__Drivers__AB6E61642760FB05")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("BasicDelivery.Domain.Entities.DriverDetail", b =>
                {
                    b.Property<int>("DriverDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("driverDetailId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverDetailId"), 1L, 1);

                    b.Property<string>("Back")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("back");

                    b.Property<int>("DriverId")
                        .HasColumnType("int")
                        .HasColumnName("driverId");

                    b.Property<string>("Font")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("font");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("licenseNumber");

                    b.Property<string>("VehicleModel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("vehicleModel");

                    b.HasKey("DriverDetailId");

                    b.HasIndex("DriverId");

                    b.ToTable("DriverDetail", (string)null);
                });

            modelBuilder.Entity("BasicDelivery.Domain.Entities.History", b =>
                {
                    b.Property<int>("HistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("historyId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoryId"), 1L, 1);

                    b.Property<DateTime?>("ChangeDate")
                        .HasColumnType("datetime")
                        .HasColumnName("changeDate");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime")
                        .HasColumnName("orderDate");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("HistoryId");

                    b.HasIndex("OrderId");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("BasicDelivery.Domain.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<DateTime?>("CompleteAt")
                        .HasColumnType("datetime")
                        .HasColumnName("completeAt");

                    b.Property<int?>("DeliveryNote")
                        .HasColumnType("int")
                        .HasColumnName("deliveryNote");

                    b.Property<DateTime?>("DriverAcceptAt")
                        .HasColumnType("datetime")
                        .HasColumnName("driverAcceptAt");

                    b.Property<int>("DriverId")
                        .HasColumnType("int")
                        .HasColumnName("driverId");

                    b.Property<int?>("HeightPackage")
                        .HasColumnType("int")
                        .HasColumnName("heightPackage");

                    b.Property<string>("ImagesPackages")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("imagesPackages");

                    b.Property<string>("Location")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("location");

                    b.Property<int?>("LongPackage")
                        .HasColumnType("int")
                        .HasColumnName("longPackage");

                    b.Property<bool?>("PaymentMethod")
                        .HasColumnType("bit")
                        .HasColumnName("paymentMethod");

                    b.Property<string>("ReceiverAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("receiverAddress");

                    b.Property<string>("ReceiverDistrict")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("receiverDistrict");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("receiverName");

                    b.Property<string>("ReceiverPhone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)")
                        .HasColumnName("receiverPhone");

                    b.Property<string>("ReceiverWard")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("receiverWard");

                    b.Property<int?>("ShipCost")
                        .HasColumnType("int")
                        .HasColumnName("shipCost");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("TotalCod")
                        .HasColumnType("int")
                        .HasColumnName("totalCod");

                    b.Property<int?>("TotalGamPackage")
                        .HasColumnType("int")
                        .HasColumnName("totalGamPackage");

                    b.Property<int?>("TotalMoney")
                        .HasColumnType("int")
                        .HasColumnName("totalMoney");

                    b.Property<int?>("TotalPriceProduct")
                        .HasColumnType("int")
                        .HasColumnName("totalPriceProduct");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    b.Property<string>("UserNote")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("userNote");

                    b.Property<int?>("WidePackage")
                        .HasColumnType("int")
                        .HasColumnName("widePackage");

                    b.HasKey("OrderId");

                    b.HasIndex("DriverId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BasicDelivery.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("orderDetailId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"), 1L, 1);

                    b.Property<int>("Gam")
                        .HasColumnType("int")
                        .HasColumnName("gam");

                    b.Property<string>("ImagesProduct")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("imagesProduct");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail", (string)null);
                });

            modelBuilder.Entity("BasicDelivery.Domain.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<string>("CodeProduct")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("codeProduct");

                    b.Property<string>("ImagesProduct")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("imagesProduct");

                    b.Property<string>("NameProduct")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("nameProduct");

                    b.Property<int>("Price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.Property<int>("ProductVolume")
                        .HasColumnType("int")
                        .HasColumnName("productVolume");

                    b.HasKey("ProductId");

                    b.HasIndex(new[] { "NameProduct" }, "UQ__Products__3AE90233EE0111D0")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BasicDelivery.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("userId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("address");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("avatar");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("createDate");

                    b.Property<string>("Email")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("fullName");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime")
                        .HasColumnName("lastLogin");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("passwordHash");

                    b.Property<string>("Salt")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("salt");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__AB6E616421824B57")
                        .IsUnique()
                        .HasFilter("[email] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BasicDelivery.Domain.Entities.DriverDetail", b =>
                {
                    b.HasOne("BasicDelivery.Domain.Entities.Driver", "Driver")
                        .WithMany("DriverDetails")
                        .HasForeignKey("DriverId")
                        .IsRequired()
                        .HasConstraintName("FK__DriverDeta__back__29572725");

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("BasicDelivery.Domain.Entities.History", b =>
                {
                    b.HasOne("BasicDelivery.Domain.Entities.Order", "Order")
                        .WithMany("Histories")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__Histories__chang__36B12243");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("BasicDelivery.Domain.Entities.Order", b =>
                {
                    b.HasOne("BasicDelivery.Domain.Entities.Driver", "Driver")
                        .WithMany("Orders")
                        .HasForeignKey("DriverId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__driverId__2D27B809");

                    b.HasOne("BasicDelivery.Domain.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Orders__totalCod__2C3393D0");

                    b.Navigation("Driver");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BasicDelivery.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("BasicDelivery.Domain.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__order__33D4B598");

                    b.HasOne("BasicDelivery.Domain.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__produ__32E0915F");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BasicDelivery.Domain.Entities.Driver", b =>
                {
                    b.Navigation("DriverDetails");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BasicDelivery.Domain.Entities.Order", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BasicDelivery.Domain.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("BasicDelivery.Domain.Entities.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
